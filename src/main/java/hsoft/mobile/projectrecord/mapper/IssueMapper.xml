<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hsoft.mobile.projectrecord.mapper.IssueMapper">
  <resultMap id="BaseResultMap" type="hsoft.mobile.projectrecord.model.Issue">
    <id column="issue_id" jdbcType="INTEGER" property="issueId" />
    <result column="proj_index" jdbcType="VARCHAR" property="projIndex" />
    <result column="req_id" jdbcType="INTEGER" property="reqId" />
    <result column="issue_category_id" jdbcType="INTEGER" property="issueCategoryId" />
    <result column="issue_description" jdbcType="VARCHAR" property="issueDescription" />
    <result column="platform_id" jdbcType="INTEGER" property="platformId" />
    <result column="issue_solution" jdbcType="VARCHAR" property="issueSolution" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="hide" jdbcType="INTEGER" property="hide" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    issue_id, proj_index, req_id, issue_category_id, issue_description, platform_id, 
    issue_solution, create_id, create_time, update_id, update_time, hide
  </sql>
  <select id="selectByExample" parameterType="hsoft.mobile.projectrecord.model.IssueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from issue
    where issue_id = #{issueId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from issue
    where issue_id = #{issueId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="hsoft.mobile.projectrecord.model.IssueExample">
    delete from issue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hsoft.mobile.projectrecord.model.Issue">
    insert into issue (issue_id, proj_index, req_id, 
      issue_category_id, issue_description, platform_id, 
      issue_solution, create_id, create_time, 
      update_id, update_time, hide
      )
    values (#{issueId,jdbcType=INTEGER}, #{projIndex,jdbcType=VARCHAR}, #{reqId,jdbcType=INTEGER}, 
      #{issueCategoryId,jdbcType=INTEGER}, #{issueDescription,jdbcType=VARCHAR}, #{platformId,jdbcType=INTEGER}, 
      #{issueSolution,jdbcType=VARCHAR}, #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{hide,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="hsoft.mobile.projectrecord.model.Issue">
    insert into issue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="issueId != null">
        issue_id,
      </if>
      <if test="projIndex != null">
        proj_index,
      </if>
      <if test="reqId != null">
        req_id,
      </if>
      <if test="issueCategoryId != null">
        issue_category_id,
      </if>
      <if test="issueDescription != null">
        issue_description,
      </if>
      <if test="platformId != null">
        platform_id,
      </if>
      <if test="issueSolution != null">
        issue_solution,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="hide != null">
        hide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="issueId != null">
        #{issueId,jdbcType=INTEGER},
      </if>
      <if test="projIndex != null">
        #{projIndex,jdbcType=VARCHAR},
      </if>
      <if test="reqId != null">
        #{reqId,jdbcType=INTEGER},
      </if>
      <if test="issueCategoryId != null">
        #{issueCategoryId,jdbcType=INTEGER},
      </if>
      <if test="issueDescription != null">
        #{issueDescription,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null">
        #{platformId,jdbcType=INTEGER},
      </if>
      <if test="issueSolution != null">
        #{issueSolution,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hide != null">
        #{hide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hsoft.mobile.projectrecord.model.IssueExample" resultType="java.lang.Long">
    select count(*) from issue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update issue
    <set>
      <if test="record.issueId != null">
        issue_id = #{record.issueId,jdbcType=INTEGER},
      </if>
      <if test="record.projIndex != null">
        proj_index = #{record.projIndex,jdbcType=VARCHAR},
      </if>
      <if test="record.reqId != null">
        req_id = #{record.reqId,jdbcType=INTEGER},
      </if>
      <if test="record.issueCategoryId != null">
        issue_category_id = #{record.issueCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.issueDescription != null">
        issue_description = #{record.issueDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.platformId != null">
        platform_id = #{record.platformId,jdbcType=INTEGER},
      </if>
      <if test="record.issueSolution != null">
        issue_solution = #{record.issueSolution,jdbcType=VARCHAR},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hide != null">
        hide = #{record.hide,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update issue
    set issue_id = #{record.issueId,jdbcType=INTEGER},
      proj_index = #{record.projIndex,jdbcType=VARCHAR},
      req_id = #{record.reqId,jdbcType=INTEGER},
      issue_category_id = #{record.issueCategoryId,jdbcType=INTEGER},
      issue_description = #{record.issueDescription,jdbcType=VARCHAR},
      platform_id = #{record.platformId,jdbcType=INTEGER},
      issue_solution = #{record.issueSolution,jdbcType=VARCHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      hide = #{record.hide,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hsoft.mobile.projectrecord.model.Issue">
    update issue
    <set>
      <if test="projIndex != null">
        proj_index = #{projIndex,jdbcType=VARCHAR},
      </if>
      <if test="reqId != null">
        req_id = #{reqId,jdbcType=INTEGER},
      </if>
      <if test="issueCategoryId != null">
        issue_category_id = #{issueCategoryId,jdbcType=INTEGER},
      </if>
      <if test="issueDescription != null">
        issue_description = #{issueDescription,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null">
        platform_id = #{platformId,jdbcType=INTEGER},
      </if>
      <if test="issueSolution != null">
        issue_solution = #{issueSolution,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hide != null">
        hide = #{hide,jdbcType=INTEGER},
      </if>
    </set>
    where issue_id = #{issueId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hsoft.mobile.projectrecord.model.Issue">
    update issue
    set proj_index = #{projIndex,jdbcType=VARCHAR},
      req_id = #{reqId,jdbcType=INTEGER},
      issue_category_id = #{issueCategoryId,jdbcType=INTEGER},
      issue_description = #{issueDescription,jdbcType=VARCHAR},
      platform_id = #{platformId,jdbcType=INTEGER},
      issue_solution = #{issueSolution,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      hide = #{hide,jdbcType=INTEGER}
    where issue_id = #{issueId,jdbcType=INTEGER}
  </update>
</mapper>